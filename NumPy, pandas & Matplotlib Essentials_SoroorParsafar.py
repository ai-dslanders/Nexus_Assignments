# -*- coding: utf-8 -*-
"""Copy of Assignment 02. Python Packages | Nexus | RezaShokrzad.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IGHRFntWvnMl5d_4Iaavjr4SVfFuK4Xw

# 📚 Assignment 2 — NumPy, pandas & Matplotlib Essentials
<p align="center">📢⚠️📂  </p>

<p align="center"> Please name your file using the format: <code>assignmentName_nickname.py/.ipynb</code> (e.g., <code>project1_ali.py</code>) and push it to GitHub with a clear commit message.</p>

<p align="center"> 🚨📝🧠 </p>


------------------------------------------------


Welcome to your first data-science sprint! In this three-part mini-project you’ll touch the libraries every ML practitioner leans on daily:

1. NumPy — fast n-dimensional arrays

2. pandas — tabular data wrangling

3. Matplotlib — quick, customizable plots

Each part starts with “Quick-start notes”, then gives you two bite-sized tasks. Replace every # TODO with working Python in a notebook or script, run it, and check your results. Happy hacking! 😊

## 1 · NumPy 🧮
Quick-start notes
Core object: ndarray (n-dimensional array)

Create data: np.array, np.arange, np.random.*

Summaries: mean, std, sum, max, …

Vectorised math beats Python loops for speed

### Task 1 — Mock temperatures
"""

# 👉 # TODO: import numpy and create an array of 365
# normally-distributed °C values (µ=20, σ=5) called temps
import numpy as np
temps = np.random.normal(loc=20, scale=5, size=365)
print(temps[:5])

"""### Task 2 — Average temperature

"""

# 👉 # TODO: print the mean of temps
print(np.mean(temps))

"""## 2 · pandas 📊
Quick-start notes
Main structures: DataFrame, Series

Read data: pd.read_csv, pd.read_excel, …

Selection: .loc[label], .iloc[pos]

Group & summarise: .groupby(...).agg(...)

### Task 3 — Load ride log
"""

# 👉 # TODO: read "rides.csv" into df
# (columns: date,temp,rides,weekday)
import pandas as pd
file_name = "rides.csv"
df = pd.read_csv(file_name)

# Create a dummy rides.csv file for demonstration purposes
data = {'date': pd.to_datetime(['2023-01-01', '2023-01-02', '2023-01-03', '2023-01-04', '2023-01-05']),
        'temp': [10, 12, 15, 13, 11],
        'rides': [50, 55, 60, 53, 51],
        'weekday': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday']}
dummy_df = pd.DataFrame(data)
dummy_df.to_csv('rides.csv', index=False)

"""### Task 4 — Weekday averages"""

# 👉 # TODO: compute and print mean rides per weekday
df.groupby("weekday").agg({"rides": "mean"})

"""## 3 · Matplotlib 📈
Quick-start notes
Workhorse: pyplot interface (import matplotlib.pyplot as plt)

Figure & axes: fig, ax = plt.subplots()

Common plots: plot, scatter, hist, imshow

Display inline in Jupyter with %matplotlib inline or %matplotlib notebook

### Task 5 — Scatter plot
"""

# 👉 # TODO: scatter-plot temperature (x) vs rides (y) from df
import pandas as pd
import matplotlib.pyplot as plt
file_name = "rides.csv"
df = pd.read_csv(file_name)
plt.figure(figsize=(10, 6))
plt.scatter(df['temp'], df['rides'])
plt.title('Rides vs. Temperature', fontsize=16)
plt.xlabel('Temperature (°C)', fontsize=12)
plt.ylabel('Rides', fontsize=12)

"""### Task 6 — Show the figure


"""

# 👉 # TODO: call plt.show() so the plot appears
plt.show()